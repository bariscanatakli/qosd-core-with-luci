#!/bin/sh /etc/rc.common
# Copyright (C)

. /lib/functions.sh

USE_PROCD=1
START=98
STOP=02

qosd_apply_logging() {
	local cfg="$1"

	config_get_bool remote "$cfg" syslog_remote 0
	config_get host "$cfg" syslog_host ""
	config_get port "$cfg" syslog_port "5514"
	config_get proto "$cfg" syslog_proto "udp"
	config_get level "$cfg" syslog_level "7"

	case "$proto" in
		tcp|udp) ;;
		*) proto="udp" ;;
	esac

	local sys_section
	if uci -q show system.@system[0] >/dev/null 2>&1; then
		sys_section="system.@system[0]"
	else
		local new_sec
		new_sec="$(uci add system system)"
		sys_section="system.${new_sec}"
	fi

	local changed=0

	if [ "$remote" -eq 1 ] && [ -n "$host" ]; then
		local cur

		cur="$(uci -q get "${sys_section}.log_ip")"
		[ "$cur" != "$host" ] && { uci set "${sys_section}.log_ip=$host"; changed=1; }

		cur="$(uci -q get "${sys_section}.log_port")"
		[ "$cur" != "$port" ] && { uci set "${sys_section}.log_port=$port"; changed=1; }

		cur="$(uci -q get "${sys_section}.log_proto")"
		[ "$cur" != "$proto" ] && { uci set "${sys_section}.log_proto=$proto"; changed=1; }

		cur="$(uci -q get "${sys_section}.log_level")"
		[ -n "$level" ] && [ "$cur" != "$level" ] && { uci set "${sys_section}.log_level=$level"; changed=1; }

		cur="$(uci -q get "${sys_section}.log_remote")"
		[ "$cur" != "1" ] && { uci set "${sys_section}.log_remote=1"; changed=1; }
	else
		local cur
		cur="$(uci -q get "${sys_section}.log_remote")"
		if [ "$cur" = "1" ]; then
			uci set "${sys_section}.log_remote=0"
			changed=1
		fi
	fi

	if [ "$changed" -eq 1 ]; then
		uci commit system
		/etc/init.d/log reload >/dev/null 2>&1 || /etc/init.d/log restart >/dev/null 2>&1
	fi
}

start_service() {
	config_load qosd
	config_get_bool enabled main enabled 1
	[ "$enabled" -eq 1 ] || return 0

	qosd_apply_logging main

	procd_open_instance
	procd_set_param command /usr/sbin/qosd
	procd_set_param respawn
	procd_close_instance
}
